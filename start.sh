#!/bin/bash

# Script de inicio r√°pido para Backend-Optimizacion
echo "üöÄ Iniciando Backend-Optimizacion con Docker..."

# Verificar si Docker est√° ejecut√°ndose
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Error: Docker no est√° ejecut√°ndose. Por favor, inicia Docker Desktop."
    exit 1
fi

# Verificar si existe el archivo .env
if [ ! -f .env ]; then
    echo "üìù Creando archivo .env desde env.example..."
    cp env.example .env
    echo "‚úÖ Archivo .env creado. Puedes editarlo si es necesario."
fi

# Funci√≥n para mostrar el progreso
show_progress() {
    echo "‚è≥ $1..."
}

# Funci√≥n para mostrar √©xito
show_success() {
    echo "‚úÖ $1"
}

# Funci√≥n para mostrar error
show_error() {
    echo "‚ùå $1"
}

# Construir las im√°genes
show_progress "Construyendo im√°genes Docker"
if docker-compose build; then
    show_success "Im√°genes construidas correctamente"
else
    show_error "Error al construir las im√°genes"
    exit 1
fi

# Iniciar los servicios
show_progress "Iniciando servicios"
if docker-compose up -d; then
    show_success "Servicios iniciados correctamente"
else
    show_error "Error al iniciar los servicios"
    exit 1
fi

# Esperar un momento para que los servicios se inicialicen
show_progress "Esperando que los servicios se inicialicen"
sleep 10

# Verificar el estado de los contenedores
show_progress "Verificando estado de los contenedores"
if docker-compose ps | grep -q "Up"; then
    show_success "Todos los contenedores est√°n ejecut√°ndose"
else
    show_error "Algunos contenedores no est√°n ejecut√°ndose"
    echo "üìã Estado de los contenedores:"
    docker-compose ps
    exit 1
fi

# Mostrar informaci√≥n de acceso
echo ""
echo "üéâ ¬°Backend-Optimizacion est√° listo!"
echo ""
echo "üì± URLs de acceso:"
echo "   ‚Ä¢ Aplicaci√≥n principal: http://localhost"
echo "   ‚Ä¢ Admin de Django: http://localhost/admin"
echo "   ‚Ä¢ API REST: http://localhost/api/"
echo ""
echo "üîë Credenciales por defecto:"
echo "   ‚Ä¢ Superusuario: admin / admin123"
echo "   ‚Ä¢ Base de datos: root / 123456"
echo ""
echo "üìã Comandos √∫tiles:"
echo "   ‚Ä¢ Ver logs: docker-compose logs -f"
echo "   ‚Ä¢ Detener servicios: docker-compose down"
echo "   ‚Ä¢ Reiniciar servicios: docker-compose restart"
echo "   ‚Ä¢ Acceder al shell: docker-compose exec web bash"
echo ""
echo "üîç Para ver los logs en tiempo real, ejecuta:"
echo "   docker-compose logs -f"
echo ""
